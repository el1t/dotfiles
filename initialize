#!/bin/zsh
clear
# Allow force (-f) option
if [[ $1 != '-f' && $1 != '--force' ]]; then
	# Version check
	min_zsh_version='5.0.0'
	if ! autoload -Uz is-at-least || ! is-at-least $min_zsh_version; then
		>&2 print "statusline: old shell detected, minimum supported: $min_zsh_version"
		read -q input \?'Continue anyways? [yn] '
		echo
		[[ $input == n ]] && exit || unset input
		echo
	fi
	unset min_zsh_version
	# Info
	print -P "$(cat <<EOH
This script sets up various defaults and configurations as preferred by me.
 - %BImport config files%b into zsh
 - %BChange default shell%b to /bin/zsh
 - %BAdd \"Recent Applications\"%b stack to dock
 - %BSet%b the following %Bdefaults:%b
 -- Enable scroll-to-open on dock
 -- Enable key repeat
 -- Default to expanded save panel
 - %BInstall prezto%b
 -- %BImport%b original zsh config files into prezto
 -- %BBackup%b original zsh config files
 - %BInstall statusline%b prezto theme (el1t/statusline)
 -- %BInstall%b custom Powerline-patched Menlo font
 -- %BInstall%b zpreztorc from el1t/dotfiles
 -- %BInstall%b Solarized Terminal.app profile
 - %BInstall homebrew%b
 -- %BBrew install%b %Upython3%u, %Ugit%u, and %Uvim%u

tl;dr: %B%UOS X%u and %USolarized%u are best; %Uzsh%u not bash; %Uprezto%u not oh-my-zsh; %Uhomebrew%u not macports%b
EOH)"
	[[ -d ~/.oh-my-zsh/ ]] && print -P '%F{1}%UWarning%u%f: oh-my-zsh will be uninstalled'
	echo
	read -q input\?'Continue? [yn] '
	echo
	[[ $input == n ]] && exit || unset input
	echo
fi

# Uninstall oh-my-zsh
if [[ -d ~/.oh-my-zsh/ ]]; then
	print -P '%B>>> Uninstalling oh-my-zsh%b'
	local +h ZSH=~/.oh-my-zsh/
	source "$ZSH/lib/functions.zsh"
	if (( $+functions[uninstall_oh_my_zsh] )); then
		uninstall_oh_my_zsh
		# Detect if oh-my-zsh uninstall switched to bash
		if [[ ${$(sh -c 'echo $SHELL'):t} != 'zsh' ]]; then
			print -P '%B>>> Switching back to zsh%b'
			chsh -s /bin/zsh
			# If oh-my-zsh switches to bash, it leaves a dirty .zshrc
			if [[ -s ~/.zshrc ]]; then
				print -P '%B%F{1}>>> Renaming .zshrc to .zshrc.omz-backup%f%b'
				echo '(oh-my-zsh uninstall left a dirty .zshrc)'
				mv ~/.zshrc ~/.zshrc.omz-backup
			fi
		fi
	else
		>&2 print -P '%F{1}%BError%b%f: Could not locate uninstall function'
		echo 'Please uninstall oh-my-zsh manually'
		exit
	fi
	unset ZSH
fi

# Copy over config files into zshrc
if [[ ${SHELL:t} != 'zsh' ]]; then
	read -q input\?'Import config into zsh?
		(via sourcing originals, possible compatibility issues) [yn] '
	if [[ $input == y ]]; then
		unset input
		function import_config {
			local input="$HOME/"$1
			local output="${ZDOTDIR:-$HOME}/"$2
			if [[ -s $input && -w $output ]]; then
				echo "Importing $input to $output"
				print -P "\n#\n# Import from ${SHELL:t}\n#\n\nsource $input" >> $output
			fi
		}
		case ${SHELL:t} in
			(bash)
				import_config '.bashrc' '.zshrc'
				import_config '.bash_profile' '.zprofile'
				import_config '.bash_login' '.zlogin'
				import_config '.bash_logout' '.zlogout'
				;;
			(ksh)
				import_config '.kshrc' '.zshrc'
				;;
			(sh)
				import_config '.shrc' '.zshrc'
				;;
			(*)
				print -P "Importing from ${SHELL:t} is unsupported. No files were imported."
				;;
		esac
	else
		unset input
	fi
	print -P '%B>>> Changing default shell to /bin/zsh%b'
	chsh -s /bin/zsh
fi

# Setup defaults
print -P '%B>>> Writing defaults%b'
defaults write com.apple.dock persistent-others -array-add '{ "tile-data" = { "list-type" = 1; }; "tile-type" = "recents-tile"; }'
echo 'Added recents folder'
defaults write com.apple.dock scroll-to-open -bool TRUE
echo 'Enabled scroll-to-open'
defaults write -g ApplePressAndHoldEnabled -bool false
echo 'Enabled key repeat'
defaults write -g NSNavPanelExpandedStateForSaveMode -boolean true
echo 'Enabled expanded save panel'
print -P '%B>>> Restarting Dock%b'
killall Dock

# Prezto and theme setup
zsh -c "set -- '-f'; $(curl -fsSL https://raw.githubusercontent.com/el1t/statusline/master/prezto/install)"

print -P '%B>>> Importing zpreztorc from el1t/dotfiles%b'
# curl -fsSLo "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zpreztorc" \
# 'https://raw.githubusercontent.com/el1t/dotfiles/master/.zprezto/runcoms/zpreztorc'

# Install homebrew
if (( $+commands[brew] )); then
	# Update instead
	print -P '%B>>> Updating brew formulae%b'
	brew update
	print -P '%B>>> Upgrading brew packages%b'
	brew upgrade --all
	print -P '%B>>> Cleaning brew cache%b'
	rm -rf $(brew --cache)
else
	print -P '%B>>> Installing brew%b'
	ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi
print -P '%B>>> Installing brew packages%b'
brew install python3 git vim

echo '\nZsh is now the default shell.\n'
read -q input\?'Restart terminal? (recommended) [yn] '
echo
[[ $input == n ]] && killall Terminal
unset input